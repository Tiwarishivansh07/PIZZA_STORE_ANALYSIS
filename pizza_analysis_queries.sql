-- 1. RETRIEVE THE TOTAL NUMBER OF ORDERS PLACED.
SELECT COUNT(DISTINCT order_id) AS Total_Orders 
FROM PIZZA_ORDER;

-- 2. CALCULATE THE TOTAL REVENUE GENERATED FROM PIZZA SALES.

-- TO SEE THE DETAILS
SELECT PIZZA_ORDER_DETAIL.pizza_id, PIZZA_ORDER_DETAIL.quantity, PIZZA_DETAIL.price
FROM PIZZA_ORDER_DETAIL 
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id;

-- TO GET THE ANSWER
SELECT CAST(SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) AS DECIMAL(10,2)) AS Total_Revenue
FROM PIZZA_ORDER_DETAIL 
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id;

-- 3. IDENTIFY THE HIGHEST-PRICED PIZZA.
SELECT PIZZA_TYPE.name AS Pizza_Name, CAST(PIZZA_DETAIL.price AS DECIMAL(10,2)) AS Price
FROM PIZZA_DETAIL 
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
ORDER BY price DESC
FETCH FIRST 1 ROWS ONLY;

-- 4. IDENTIFY THE MOST COMMON PIZZA SIZE ORDERED.
SELECT PIZZA_DETAIL.size, COUNT(DISTINCT order_id) AS No_of_Orders, SUM(quantity) AS Total_Quantity_Ordered 
FROM PIZZA_ORDER_DETAIL
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
GROUP BY PIZZA_DETAIL.size
ORDER BY COUNT(DISTINCT order_id) DESC;

-- 5. LIST THE TOP 5 MOST ORDERED PIZZA TYPES ALONG WITH THEIR QUANTITIES.
SELECT PIZZA_TYPE.name AS Pizza, SUM(quantity) AS Total_Ordered
FROM PIZZA_ORDER_DETAIL
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
GROUP BY PIZZA_TYPE.name 
ORDER BY SUM(quantity) DESC
FETCH FIRST 5 ROWS ONLY;

-- 6. JOIN THE NECESSARY TABLES TO FIND THE TOTAL QUANTITY OF EACH PIZZA CATEGORY ORDERED.
SELECT PIZZA_TYPE.category, SUM(quantity) AS Total_Quantity_Ordered
FROM PIZZA_ORDER_DETAIL
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
GROUP BY PIZZA_TYPE.category 
ORDER BY SUM(quantity) DESC
FETCH FIRST 5 ROWS ONLY;

-- 7. DETERMINE THE DISTRIBUTION OF ORDERS BY HOUR OF THE DAY.
SELECT EXTRACT(HOUR FROM "time") AS Hour_of_the_day,COUNT(DISTINCT order_id) AS No_of_Orders
FROM PIZZA_ORDER
GROUP BY EXTRACT(HOUR FROM "time")
ORDER BY No_of_Orders DESC;


-- 8. FIND THE CATEGORY-WISE DISTRIBUTION OF PIZZAS.
SELECT category, COUNT(DISTINCT pizza_type_id) AS No_of_pizzas
FROM PIZZA_TYPE
GROUP BY category
ORDER BY No_of_pizzas;

-- 9. CALCULATE THE AVERAGE NUMBER OF PIZZAS ORDERED PER DAY.
WITH CTE AS (
    SELECT PIZZA_ORDER.date AS Date, SUM(PIZZA_ORDER_DETAIL.quantity) AS Total_Pizza_Ordered_that_day
    FROM PIZZA_ORDER_DETAIL
    JOIN PIZZA_ORDER ON PIZZA_ORDER_DETAIL.order_id = PIZZA_ORDER.order_id
    GROUP BY PIZZA_ORDER.date
)
SELECT AVG(Total_Pizza_Ordered_that_day) AS Avg_Number_of_pizzas_ordered_per_day
FROM CTE;

-- ALTERNATE USING SUBQUERY
SELECT AVG(Total_Pizza_Ordered_that_day) AS Avg_Number_of_pizzas_ordered_per_day
FROM (
    SELECT PIZZA_ORDER.date AS Date, SUM(PIZZA_ORDER_DETAIL.quantity) AS Total_Pizza_Ordered_that_day
    FROM PIZZA_ORDER_DETAIL
    JOIN PIZZA_ORDER ON PIZZA_ORDER_DETAIL.order_id = PIZZA_ORDER.order_id
    GROUP BY PIZZA_ORDER.date
) AS PIZZAS_ORDERED;

-- 10. DETERMINE THE TOP 3 MOST ORDERED PIZZA TYPES BASED ON REVENUE.
SELECT PIZZA_TYPE.name, SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) AS Revenue_from_pizza
FROM PIZZA_ORDER_DETAIL 
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
GROUP BY PIZZA_TYPE.name
ORDER BY Revenue_from_pizza DESC
FETCH FIRST 3 ROWS ONLY;

-- 11. CALCULATE THE PERCENTAGE CONTRIBUTION OF EACH PIZZA TYPE TO TOTAL REVENUES.
SELECT PIZZA_TYPE.category, 
CONCAT(CAST((SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) /
(SELECT SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) 
 FROM PIZZA_ORDER_DETAIL 
 JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id)) * 100 AS DECIMAL(10,2)), '%')
AS Revenue_contribution_from_pizza
FROM PIZZA_ORDER_DETAIL 
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
GROUP BY PIZZA_TYPE.category;

-- 12. CALCULATE REVENUE CONTRIBUTION FROM EACH PIZZA BY PIZZA NAME.
SELECT PIZZA_TYPE.name, 
CONCAT(CAST((SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) /
(SELECT SUM(PIZZA_ORDER_DETAIL.quantity * PIZZA_DETAIL.price) 
 FROM PIZZA_ORDER_DETAIL 
 JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id)) * 100 AS DECIMAL(10,2)), '%')
AS Revenue_contribution_from_pizza
FROM PIZZA_ORDER_DETAIL 
JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
GROUP BY PIZZA_TYPE.name
ORDER BY Revenue_contribution_from_pizza DESC;

-- 13. ANALYZE THE CUMULATIVE REVENUE GENERATED OVER TIME.
WITH CTE AS (
    SELECT date AS Date, CAST(SUM(quantity * price) AS DECIMAL(10,2)) AS Revenue
    FROM PIZZA_ORDER_DETAIL 
    JOIN PIZZA_ORDER ON PIZZA_ORDER_DETAIL.order_id = PIZZA_ORDER.order_id
    JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
    GROUP BY date
)
SELECT Date, Revenue, SUM(Revenue) OVER (ORDER BY date) AS Cumulative_Sum
FROM CTE 
GROUP BY date, Revenue;

-- 14. DETERMINE THE TOP 3 MOST ORDERED PIZZA TYPES BASED ON REVENUE FOR EACH PIZZA CATEGORY.
WITH CTE AS (
    SELECT category, name, CAST(SUM(quantity * price) AS DECIMAL(10,2)) AS Revenue
    FROM PIZZA_ORDER_DETAIL 
    JOIN PIZZA_DETAIL ON PIZZA_DETAIL.pizza_id = PIZZA_ORDER_DETAIL.pizza_id
    JOIN PIZZA_TYPE ON PIZZA_TYPE.pizza_type_id = PIZZA_DETAIL.pizza_type_id
    GROUP BY category, name
),
CTE1 AS (
    SELECT category, name, Revenue,
    RANK() OVER (PARTITION BY category ORDER BY Revenue DESC) AS rnk
    FROM CTE 
)
SELECT category, name, Revenue
FROM CTE1 
WHERE rnk IN (1, 2, 3)
ORDER BY category, name, Revenue;
